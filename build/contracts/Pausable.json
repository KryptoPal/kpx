{
  "contractName": "Pausable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerSet",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008060146101000a81548160ff0219169083151502179055506100363361003b640100000000026401000000009004565b6100e1565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f50146d0e3c60aa1d17a70635b05494f864e86144a2201275021014fbf08bafe281604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6104e8806100f06000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100725780635c975abb146100895780638456cb59146100b85780638da5cb5b146100cf578063f2fde38b14610126575b600080fd5b34801561007e57600080fd5b50610087610169565b005b34801561009557600080fd5b5061009e61020d565b604051808215151515815260200191505060405180910390f35b3480156100c457600080fd5b506100cd610220565b005b3480156100db57600080fd5b506100e46102c6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013257600080fd5b50610167600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102ef565b005b6101716102c6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101aa57600080fd5b600060149054906101000a900460ff1615156101c557600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6102286102c6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561026157600080fd5b600060149054906101000a900460ff1615151561027d57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102f76102c6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561036c57600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06103956102c6565b82604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a161041381610416565b50565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f50146d0e3c60aa1d17a70635b05494f864e86144a2201275021014fbf08bafe281604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505600a165627a7a72305820c3b45a2d5dd5b3493066950924f5cd6cb51f66c96995d3d2e6698b6db968c8c10029",
  "deployedBytecode": "0x60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100725780635c975abb146100895780638456cb59146100b85780638da5cb5b146100cf578063f2fde38b14610126575b600080fd5b34801561007e57600080fd5b50610087610169565b005b34801561009557600080fd5b5061009e61020d565b604051808215151515815260200191505060405180910390f35b3480156100c457600080fd5b506100cd610220565b005b3480156100db57600080fd5b506100e46102c6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013257600080fd5b50610167600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102ef565b005b6101716102c6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101aa57600080fd5b600060149054906101000a900460ff1615156101c557600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6102286102c6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561026157600080fd5b600060149054906101000a900460ff1615151561027d57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102f76102c6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561036c57600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06103956102c6565b82604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a161041381610416565b50565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f50146d0e3c60aa1d17a70635b05494f864e86144a2201275021014fbf08bafe281604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505600a165627a7a72305820c3b45a2d5dd5b3493066950924f5cd6cb51f66c96995d3d2e6698b6db968c8c10029",
  "sourceMap": "189:767:14:-;;;292:5;271:26;;;;;;;;;;;;;;;;;;;;823:20:16;832:10;823:8;;;:20;;;:::i;:::-;189:767:14;;1065:102:16;1125:8;1116:6;;:17;;;;;;;;;;;;;;;;;;1144:18;1153:8;1144:18;;;;;;;;;;;;;;;;;;;;;;1065:102;:::o;189:767:14:-;;;;;;;",
  "deployedSourceMap": "189:767:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;862:92:14;;;;;;271:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;271:26:14;;;;;;;;;;;;;;;;;;;;;;;;;;;690:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;690:90:14;;;;;;943:71:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;943:71:16;;;;;;;;;;;;;;;;;;;;;;;;;;;1328:178;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1328:178:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:92:14;670:7:16;:5;:7::i;:::-;656:21;;:10;:21;;;648:30;;;;;;;;592:6:14;;;;;;;;;;;584:15;;;;;;;;924:5;915:6;;:14;;;;;;;;;;;;;;;;;;940:9;;;;;;;;;;862:92::o;271:26::-;;;;;;;;;;;;;:::o;690:90::-;670:7:16;:5;:7::i;:::-;656:21;;:10;:21;;;648:30;;;;;;;;440:6:14;;;;;;;;;;;439:7;431:16;;;;;;;;753:4;744:6;;:13;;;;;;;;;;;;;;;;;;768:7;;;;;;;;;;690:90::o;943:71:16:-;981:7;1003:6;;;;;;;;;;;996:13;;943:71;:::o;1328:178::-;670:7;:5;:7::i;:::-;656:21;;:10;:21;;;648:30;;;;;;;;1424:1;1404:22;;:8;:22;;;;1396:31;;;;;;;;1438:39;1459:7;:5;:7::i;:::-;1468:8;1438:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:18;1492:8;1483;:18::i;:::-;1328:178;:::o;1065:102::-;1125:8;1116:6;;:17;;;;;;;;;;;;;;;;;;1144:18;1153:8;1144:18;;;;;;;;;;;;;;;;;;;;;;1065:102;:::o",
  "source": "pragma solidity ^0.4.24;\n\n\nimport \"../ownership/UnstructuredOwnable.sol\";\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is UnstructuredOwnable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    emit Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    emit Unpause();\n  }\n}",
  "sourcePath": "/home/ubuntu/dev/kpx/contracts/lifecycle/Pausable.sol",
  "ast": {
    "absolutePath": "/home/ubuntu/dev/kpx/contracts/lifecycle/Pausable.sol",
    "exportedSymbols": {
      "Pausable": [
        2082
      ]
    },
    "id": 2083,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2024,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:14"
      },
      {
        "absolutePath": "/home/ubuntu/dev/kpx/contracts/ownership/UnstructuredOwnable.sol",
        "file": "../ownership/UnstructuredOwnable.sol",
        "id": 2025,
        "nodeType": "ImportDirective",
        "scope": 2083,
        "sourceUnit": 2224,
        "src": "27:46:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2026,
              "name": "UnstructuredOwnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2223,
              "src": "210:19:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UnstructuredOwnable_$2223",
                "typeString": "contract UnstructuredOwnable"
              }
            },
            "id": 2027,
            "nodeType": "InheritanceSpecifier",
            "src": "210:19:14"
          }
        ],
        "contractDependencies": [
          2223
        ],
        "contractKind": "contract",
        "documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
        "fullyImplemented": true,
        "id": 2082,
        "linearizedBaseContracts": [
          2082,
          2223
        ],
        "name": "Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 2029,
            "name": "Pause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:2:14"
            },
            "src": "234:14:14"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2031,
            "name": "Unpause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "264:2:14"
            },
            "src": "251:16:14"
          },
          {
            "constant": false,
            "id": 2034,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 2082,
            "src": "271:26:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2032,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "271:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 2033,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "292:5:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2042,
              "nodeType": "Block",
              "src": "425:34:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "439:7:14",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 2037,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2034,
                          "src": "440:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3007,
                        3008
                      ],
                      "referencedDeclaration": 3007,
                      "src": "431:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "431:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2040,
                  "nodeType": "ExpressionStatement",
                  "src": "431:16:14"
                },
                {
                  "id": 2041,
                  "nodeType": "PlaceholderStatement",
                  "src": "453:1:14"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 2043,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:2:14"
            },
            "src": "400:59:14",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2050,
              "nodeType": "Block",
              "src": "578:33:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2046,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2034,
                        "src": "592:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3007,
                        3008
                      ],
                      "referencedDeclaration": 3007,
                      "src": "584:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "584:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "584:15:14"
                },
                {
                  "id": 2049,
                  "nodeType": "PlaceholderStatement",
                  "src": "605:1:14"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
            "id": 2051,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:2:14"
            },
            "src": "556:55:14",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2065,
              "nodeType": "Block",
              "src": "738:42:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2058,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2034,
                      "src": "744:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "753:4:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "744:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2061,
                  "nodeType": "ExpressionStatement",
                  "src": "744:13:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2062,
                      "name": "Pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2029,
                      "src": "768:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "768:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2064,
                  "nodeType": "EmitStatement",
                  "src": "763:12:14"
                }
              ]
            },
            "documentation": "@dev called by the owner to pause, triggers stopped state",
            "id": 2066,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2054,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2053,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2165,
                  "src": "707:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "707:9:14"
              },
              {
                "arguments": null,
                "id": 2056,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2055,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2043,
                  "src": "717:13:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "717:13:14"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "704:2:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:14"
            },
            "scope": 2082,
            "src": "690:90:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2080,
              "nodeType": "Block",
              "src": "909:45:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2073,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2034,
                      "src": "915:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "924:5:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "915:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2076,
                  "nodeType": "ExpressionStatement",
                  "src": "915:14:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2077,
                      "name": "Unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2031,
                      "src": "940:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2079,
                  "nodeType": "EmitStatement",
                  "src": "935:14:14"
                }
              ]
            },
            "documentation": "@dev called by the owner to unpause, returns to normal state",
            "id": 2081,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2069,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2068,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2165,
                  "src": "881:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "881:9:14"
              },
              {
                "arguments": null,
                "id": 2071,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2070,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2051,
                  "src": "891:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "891:10:14"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "878:2:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 2072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:14"
            },
            "scope": 2082,
            "src": "862:92:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2083,
        "src": "189:767:14"
      }
    ],
    "src": "0:956:14"
  },
  "legacyAST": {
    "absolutePath": "/home/ubuntu/dev/kpx/contracts/lifecycle/Pausable.sol",
    "exportedSymbols": {
      "Pausable": [
        2082
      ]
    },
    "id": 2083,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2024,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:14"
      },
      {
        "absolutePath": "/home/ubuntu/dev/kpx/contracts/ownership/UnstructuredOwnable.sol",
        "file": "../ownership/UnstructuredOwnable.sol",
        "id": 2025,
        "nodeType": "ImportDirective",
        "scope": 2083,
        "sourceUnit": 2224,
        "src": "27:46:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2026,
              "name": "UnstructuredOwnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2223,
              "src": "210:19:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UnstructuredOwnable_$2223",
                "typeString": "contract UnstructuredOwnable"
              }
            },
            "id": 2027,
            "nodeType": "InheritanceSpecifier",
            "src": "210:19:14"
          }
        ],
        "contractDependencies": [
          2223
        ],
        "contractKind": "contract",
        "documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
        "fullyImplemented": true,
        "id": 2082,
        "linearizedBaseContracts": [
          2082,
          2223
        ],
        "name": "Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 2029,
            "name": "Pause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:2:14"
            },
            "src": "234:14:14"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 2031,
            "name": "Unpause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "264:2:14"
            },
            "src": "251:16:14"
          },
          {
            "constant": false,
            "id": 2034,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 2082,
            "src": "271:26:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2032,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "271:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 2033,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "292:5:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2042,
              "nodeType": "Block",
              "src": "425:34:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "439:7:14",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 2037,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2034,
                          "src": "440:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3007,
                        3008
                      ],
                      "referencedDeclaration": 3007,
                      "src": "431:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "431:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2040,
                  "nodeType": "ExpressionStatement",
                  "src": "431:16:14"
                },
                {
                  "id": 2041,
                  "nodeType": "PlaceholderStatement",
                  "src": "453:1:14"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 2043,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "422:2:14"
            },
            "src": "400:59:14",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2050,
              "nodeType": "Block",
              "src": "578:33:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2046,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2034,
                        "src": "592:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3007,
                        3008
                      ],
                      "referencedDeclaration": 3007,
                      "src": "584:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "584:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "584:15:14"
                },
                {
                  "id": 2049,
                  "nodeType": "PlaceholderStatement",
                  "src": "605:1:14"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
            "id": 2051,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:2:14"
            },
            "src": "556:55:14",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2065,
              "nodeType": "Block",
              "src": "738:42:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2058,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2034,
                      "src": "744:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "753:4:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "744:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2061,
                  "nodeType": "ExpressionStatement",
                  "src": "744:13:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2062,
                      "name": "Pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2029,
                      "src": "768:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "768:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2064,
                  "nodeType": "EmitStatement",
                  "src": "763:12:14"
                }
              ]
            },
            "documentation": "@dev called by the owner to pause, triggers stopped state",
            "id": 2066,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2054,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2053,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2165,
                  "src": "707:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "707:9:14"
              },
              {
                "arguments": null,
                "id": 2056,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2055,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2043,
                  "src": "717:13:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "717:13:14"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "704:2:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:14"
            },
            "scope": 2082,
            "src": "690:90:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2080,
              "nodeType": "Block",
              "src": "909:45:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2073,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2034,
                      "src": "915:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 2074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "924:5:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "915:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2076,
                  "nodeType": "ExpressionStatement",
                  "src": "915:14:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2077,
                      "name": "Unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2031,
                      "src": "940:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "940:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2079,
                  "nodeType": "EmitStatement",
                  "src": "935:14:14"
                }
              ]
            },
            "documentation": "@dev called by the owner to unpause, returns to normal state",
            "id": 2081,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2069,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2068,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2165,
                  "src": "881:9:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "881:9:14"
              },
              {
                "arguments": null,
                "id": 2071,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2070,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2051,
                  "src": "891:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "891:10:14"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "878:2:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 2072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:14"
            },
            "scope": 2082,
            "src": "862:92:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2083,
        "src": "189:767:14"
      }
    ],
    "src": "0:956:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-07-30T08:47:46.546Z"
}